#####################
# TUTORIAL ACB EN R #
#####################

# APDO 1. Calcular un ACB (único caso fijo)

# Lo primero de todo es crear nuestra serie de años en base a nuestro horizonte temporal.
# Creamos un vector_años entre la fecha inicial y la final.
vector_años = 2015:2024
# Transformamos de numérico a temporal con la función ts.
Años = ts(vector_años, start=c(2015), end=c(2024), frequency=1)
# Mostramos en pantalla
Años

# A continuación empezamos con el análisis de los costes
# Para cada coste, creamos un vector y asignamos los valores anuales
C1 = c(1000000, 5000000, 2000000, 0, 0, 0, 0, 0, 0, 0)

# Podemos asignar los valores como función de un valor inicial y una tasa de crecimiento
crecC2 = 0.02
InicC2 = 250000
C2 = c(0, 0, 0, InicC2, InicC2*(1+crecC2), InicC2*(1+crecC2)^2, InicC2*(1+crecC2)^3, InicC2*(1+crecC2)^4, InicC2*(1+crecC2)^5, InicC2*(1+crecC2)^6)

crecC3 = 0.02
InicC3 = 75000
C3 = c(0, 0, 0, InicC3, InicC3*(1+crecC3), InicC3*(1+crecC3)^2, InicC3*(1+crecC3)^3, InicC3*(1+crecC3)^4, InicC3*(1+crecC3)^5, InicC3*(1+crecC3)^6)

# Creamos los vectores de los ingresos. Que también podemos crear como crecientes.
crecI1 = 0.035
InicI1 = 250000
I1 = c(0, InicI1, InicI1*(1+crecI1), InicI1*(1+crecI1)^2, InicI1*(1+crecI1)^3, InicI1*(1+crecI1)^4, InicI1*(1+crecI1)^5, InicI1*(1+crecI1)^6, InicI1*(1+crecI1)^7, InicI1*(1+crecI1)^8)

crecI2 = 0.025
InicI2 = 400000
I2 = c(0, 0, 0, InicI2, InicI2*(1+crecI2), InicI2*(1+crecI2)^2, InicI2*(1+crecI2)^3, InicI2*(1+crecI2)^4, InicI2*(1+crecI2)^5, InicI2*(1+crecI2)^6)

crecI3 = 0.03
InicI3 = 350000
I3 = c(0, 0, 0, InicI3, InicI3*(1+crecI3), InicI3*(1+crecI3)^2, InicI3*(1+crecI3)^3, InicI3*(1+crecI3)^4, InicI3*(1+crecI3)^5, InicI3*(1+crecI3)^6)


# Calculamos el vector de beneficios. Inicialmente será un vector de ceros.
Benefit = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
# Ahora calculamos el valor de cada año con un ciclo.
# Pondremos tantos años en el ciclo como sea nuestro horizonte temporal, y añadiremos todos nuestros ingresos y costes.
for (i in 1:10)
  Benefit[i] = (I1[i]+I2[i]+I3[i])-(C1[i]+C2[i]+C3[i])

# A continuación tenemos que calcular los valores actualizados.
# Definimos la tasa de descuento.
tasaDesc = 0.035
# Creamos un vector de valor actualizado.
VA = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
# Y calculamos el valor descontado de cada año.
for (i in 1:10)
  VA[i] = Benefit[i]/((1+tasaDesc)^(i))

# Para tener todos los datos unidos, creamos un DataFrame (estructura tabular)
ACB = data.frame(Años, I1, I2, I3, C1, C2, C3, Benefit, VA)
ACB

# El Valor Actualizado Neto será la suma del vector de valores actualizados.
VAN = sum (VA)
VAN

# APDO 2. Calcular un ACB (único caso aleatorio)

# Generamos de nuevo todas nuestras variables pero ahora en función de un valor aleatorio
Alea_C1 = c(1000000, 5000000, 2000000, 0, 0, 0, 0, 0, 0, 0)

Alea_InicC2 = runif(1, 200000, 300000)
Alea_crecC2 = runif(1, 0.015, 0.03)
Alea_C2 = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
for (j in 4:10){
  Alea_C2[j] = Alea_InicC2*((1+Alea_crecC2)^(j-4))
}

Alea_InicC3 = runif(1, 70000, 90000)
Alea_crecC3 = runif(1, -0.02, 0.04)
Alea_C3 = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
for (j in 4:10) {
  Alea_C3[j] = Alea_InicC3*((1+Alea_crecC3)^(j-4))
}

Alea_InicI1 = runif(1, 200000, 300000)
Alea_crecI1 = runif(1, 0.03, 0.04)
Alea_I1 = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
for (j in 2:10) {
  Alea_I1[j] = Alea_InicI1*((1+Alea_crecI1)^(j-2))
}

Alea_InicI2 = runif(1, 300000, 500000)
Alea_crecI2 = runif(1, 0.02, 0.035)
Alea_I2 = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
for (i in 4:10) {
  Alea_I2[j] = Alea_InicI2*((1+Alea_crecI2)^(j-4))
}

Alea_InicI3 = runif(1, 300000, 500000)
Alea_crecI3 = 0.03
Alea_I3 = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
for (i in 4:10) {
  Alea_I3[j] = Alea_InicI3*((1+Alea_crecI3)^(j-4))
}

Alea_Benefit = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
for (i in 1:10) {
  Alea_Benefit[j] = (Alea_I1[j]+Alea_I2[j]+Alea_I3[j])-(Alea_C1[j]+Alea_C2[j]+Alea_C3[j])
}

Alea_tasaDesc = runif(1, 0.025, 0.035)
Alea_VA = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
for (j in 1:10) {
  Alea_VA[j] = Alea_Benefit[j]/((1+Alea_tasaDesc)^(j))
}
Alea_VAN = sum (Alea_VA)


# APDO 3. Realizar un análisis Montecalor (muchos casos aleatorios)

# Ahora generamos las iteraciones que consideremos necesarias y almacenamos el valor del VAN en un nuevo vector.
# Realizamos 100 casos
vector_años = 2015:2024
Años = ts(vector_años, start=c(2015), end=c(2024), frequency=1) 
# Vector en el que vamos a almacenar los diferentes VAN creados
VAN_MC = c(1:100)
# Creamos el ciclo para iterar 100 veces
for (i in 1:100) {
  Alea_C1 = c(1000000, 5000000, 2000000, 0, 0, 0, 0, 0, 0, 0)
  
  Alea_InicC2 = runif(1, 200000, 300000)
  Alea_crecC2 = runif(1, 0.015, 0.03)
  Alea_C2 = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
  for (j in 4:10){
    Alea_C2[j] = Alea_InicC2*((1+Alea_crecC2)^(j-4))
  }
  
  Alea_InicC3 = runif(1, 70000, 90000)
  Alea_crecC3 = runif(1, -0.02, 0.04)
  Alea_C3 = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
  for (j in 4:10) {
    Alea_C3[j] = Alea_InicC3*((1+Alea_crecC3)^(j-4))
  }
  
  Alea_InicI1 = runif(1, 200000, 300000)
  Alea_crecI1 = runif(1, 0.03, 0.04)
  Alea_I1 = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
  for (j in 2:10) {
    Alea_I1[j] = Alea_InicI1*((1+Alea_crecI1)^(j-2))
  }
  
  Alea_InicI2 = runif(1, 300000, 500000)
  Alea_crecI2 = runif(1, 0.02, 0.035)
  Alea_I2 = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
  for (j in 4:10) {
    Alea_I2[j] = Alea_InicI2*((1+Alea_crecI2)^(j-4))
  }
  
  Alea_InicI3 = runif(1, 300000, 500000)
  Alea_crecI3 = 0.03
  Alea_I3 = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
  for (j in 4:10) {
    Alea_I3[j] = Alea_InicI3*((1+Alea_crecI3)^(j-4))
  }
  
  Alea_Benefit = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
  for (j in 1:10) {
    Alea_Benefit[j] = (Alea_I1[j]+Alea_I2[j]+Alea_I3[j])-(Alea_C1[j]+Alea_C2[j]+Alea_C3[j])
  }
  
  Alea_tasaDesc = runif(1, 0.025, 0.035)
  Alea_VA = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
  for (j in 1:10) {
    Alea_VA[j] = Alea_Benefit[j]/((1+Alea_tasaDesc)^(j))
  }
  
  ACB = data.frame(Años, Alea_I1, Alea_I2, Alea_I3, Alea_C1, Alea_C2, Alea_C3, Alea_Benefit, Alea_VA)
  ACB
  Alea_VAN = sum (Alea_VA)
  VAN_MC[i] = Alea_VAN
}
VAN_MC
# Ahora nos interesa tratar estadísticamente esos valores generados.
# Obtenemos la media
Media_MC = mean (VAN_MC)
Media_MC
# La Varianza
Varianza_MC = var (VAN_MC)
Varianza_MC
# El histograma
hist (VAN_MC)
# Generamos gráfico de densidad
plot(density(VAN_MC))
# Ordenamos de menor a mayor el vector de VAN
VAN_MC_ordenado = sort(VAN_MC, decreasing=FALSE)
# Y lo representamos
plot (VAN_MC_ordenado, main="Probabilidad de VAN", xlab="Probabilidad acumulada", ylab="VAN en u.m.", type="l")
